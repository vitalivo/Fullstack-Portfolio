# –¢–µ—Å—Ç –∑–∞–≥—Ä—É–∑–∫–∏ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
import os
from pathlib import Path
from dotenv import load_dotenv

def test_env_loading():
    """–¢–µ—Å—Ç –∑–∞–≥—Ä—É–∑–∫–∏ .env —Ñ–∞–π–ª–∞"""
    print("üß™ Testing .env file loading...")
    
    # –û—á–∏—â–∞–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ
    for key in ['TELEGRAM_BOT_TOKEN', 'TELEGRAM_CHAT_ID', 'GMAIL_USER']:
        if key in os.environ:
            del os.environ[key]
    
    print("üîÑ Cleared existing environment variables")
    
    # –ó–∞–≥—Ä—É–∂–∞–µ–º .env —Ñ–∞–π–ª
    env_path = Path('.env')
    if env_path.exists():
        print(f"üìÅ Loading .env from: {env_path.absolute()}")
        
        # –ó–∞–≥—Ä—É–∂–∞–µ–º —Å override=True
        result = load_dotenv(env_path, override=True, encoding='utf-8')
        print(f"üìã load_dotenv result: {result}")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ
        print(f"\n‚úÖ Environment variables after loading:")
        print(f"   TELEGRAM_BOT_TOKEN: {os.getenv('TELEGRAM_BOT_TOKEN', 'NOT LOADED')}")
        print(f"   TELEGRAM_CHAT_ID: {os.getenv('TELEGRAM_CHAT_ID', 'NOT LOADED')}")
        print(f"   GMAIL_USER: {os.getenv('GMAIL_USER', 'NOT LOADED')}")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —ç—Ç–æ –ø—Ä–∞–≤–∏–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
        bot_token = os.getenv('TELEGRAM_BOT_TOKEN')
        if bot_token and bot_token.startswith('8447589158'):
            print("‚úÖ Correct Telegram bot token loaded!")
        else:
            print("‚ùå Wrong or missing Telegram bot token")
            
        return True
    else:
        print("‚ùå .env file not found")
        return False

if __name__ == "__main__":
    test_env_loading()

