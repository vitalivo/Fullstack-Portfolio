# –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω–∞—è –≤–µ—Ä—Å–∏—è —Å –ø—Ä–∞–≤–∏–ª—å–Ω–æ–π –∫–æ–¥–∏—Ä–æ–≤–∫–æ–π
import os
from pathlib import Path

def check_env_file_fixed():
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ .env —Ñ–∞–π–ª–∞ —Å –ø—Ä–∞–≤–∏–ª—å–Ω–æ–π –∫–æ–¥–∏—Ä–æ–≤–∫–æ–π"""
    print("üîç Checking .env file location...")
    
    # –¢–µ–∫—É—â–∞—è –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è
    current_dir = Path.cwd()
    print(f"üìÅ Current directory: {current_dir}")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–∞–∑–Ω—ã–µ –º–µ—Å—Ç–∞
    env_locations = [
        current_dir / '.env',
        current_dir / 'portfolio_backend' / '.env',
        current_dir.parent / '.env'
    ]
    
    for env_path in env_locations:
        if env_path.exists():
            print(f"‚úÖ Found .env at: {env_path}")
            
            try:
                # –ß–∏—Ç–∞–µ–º —Å UTF-8 –∫–æ–¥–∏—Ä–æ–≤–∫–æ–π
                with open(env_path, 'r', encoding='utf-8') as f:
                    content = f.read()
                    print(f"üìã Content preview (UTF-8):")
                    for line in content.split('\n')[:15]:  # –ü–µ—Ä–≤—ã–µ 15 —Å—Ç—Ä–æ–∫
                        if line.strip():
                            print(f"   {line}")
            except UnicodeDecodeError:
                try:
                    # –ü—Ä–æ–±—É–µ–º —Å cp1251 (—Ä—É—Å—Å–∫–∞—è –∫–æ–¥–∏—Ä–æ–≤–∫–∞)
                    with open(env_path, 'r', encoding='cp1251') as f:
                        content = f.read()
                        print(f"üìã Content preview (CP1251):")
                        for line in content.split('\n')[:15]:
                            if line.strip():
                                print(f"   {line}")
                except Exception as e:
                    print(f"‚ùå Cannot read file: {e}")
                    print("üîß File has encoding issues - will recreate it")
        else:
            print(f"‚ùå Not found at: {env_path}")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
    print(f"\nüîç Current environment variables:")
    print(f"   TELEGRAM_BOT_TOKEN: {os.getenv('TELEGRAM_BOT_TOKEN', 'NOT SET')}")
    print(f"   TELEGRAM_CHAT_ID: {os.getenv('TELEGRAM_CHAT_ID', 'NOT SET')}")
    print(f"   GMAIL_USER: {os.getenv('GMAIL_USER', 'NOT SET')}")

def create_clean_env_file():
    """–°–æ–∑–¥–∞—Ç—å —á–∏—Å—Ç—ã–π .env —Ñ–∞–π–ª —Å –ø—Ä–∞–≤–∏–ª—å–Ω–æ–π –∫–æ–¥–∏—Ä–æ–≤–∫–æ–π"""
    print("\nüîß Creating clean .env file...")
    
    env_content = """# Gmail SMTP –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ (–†–ê–ë–û–¢–ê–ï–¢!)
GMAIL_USER=vitalivo@gmail.com
GMAIL_APP_PASSWORD=avsx tsjl brds cmlf

# Resend API (—Ä–µ–∑–µ—Ä–≤)
RESEND_API_KEY=re_XD4M64CE_G3U51vTindYeXuVN4XdaRuds

# Telegram Bot (–û–ë–ù–û–í–õ–ï–ù–û!)
TELEGRAM_BOT_TOKEN=8447589158:AAF23a8ZvDBkZYLdfOL4t2p6j8AEsW9_ZKA
TELEGRAM_CHAT_ID=769259836

# Django
DEBUG=True
SECRET_KEY=django-insecure-your-secret-key-here
"""
    
    try:
        # –°–æ–∑–¥–∞–µ–º —Ñ–∞–π–ª —Å UTF-8 –∫–æ–¥–∏—Ä–æ–≤–∫–æ–π
        with open('.env', 'w', encoding='utf-8') as f:
            f.write(env_content)
        
        print("‚úÖ Clean .env file created successfully!")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —Ñ–∞–π–ª —á–∏—Ç–∞–µ—Ç—Å—è
        with open('.env', 'r', encoding='utf-8') as f:
            content = f.read()
            print("üìã New .env content:")
            for line in content.split('\n')[:10]:
                if line.strip():
                    print(f"   {line}")
                    
        return True
        
    except Exception as e:
        print(f"‚ùå Failed to create .env file: {e}")
        return False

if __name__ == "__main__":
    check_env_file_fixed()
    
    # –ü—Ä–µ–¥–ª–∞–≥–∞–µ–º –ø–µ—Ä–µ—Å–æ–∑–¥–∞—Ç—å —Ñ–∞–π–ª
    response = input("\n‚ùì Recreate clean .env file? (y/n): ").lower()
    if response == 'y':
        create_clean_env_file()
